{"name": "3. Если одного из полей нет, запрос возвращает ошибку 400", "status": "failed", "statusDetails": {"message": "AssertionError: Код ответа не 400 при отсутствии обязательного поля\nassert 409 == 400\n +  where 409 = <Response [409]>.status_code", "trace": "self = <test_01_create_courier_api.TestCourierAPI object at 0x10677f080>, missing_field = 'firstName', create_courier = ({'firstName': 'K3Bh1Eri6p', 'login': 'G2asT6GRIo', 'password': 'upNB4KPTuw'}, {'ok': True})\n\n    @pytest.mark.parametrize(\"missing_field\", [\"login\", \"password\", \"firstName\"])\n    @allure.title(\"3. Если одного из полей нет, запрос возвращает ошибку 400\")\n    @allure.description(\n        \"Проверка, что создание курьера без одного из обязательных полей приводит к ошибке 400 и сообщению \"\n        \"'Недостаточно данных для создания учетной записи'\"\n    )\n    @allure.step(\n        \"Отправляем POST-запрос на создание курьера с сгенерированными данными в Json файле без одного из полей\"\n    )\n    def test_create_courier_missing_field(self, missing_field, create_courier):\n        courier_data, _ = create_courier\n        invalid_data = courier_data.copy()\n        del invalid_data[missing_field]\n    \n        response = requests.post(f\"{Url.BASE_URL}/courier\", json=invalid_data)\n    \n>       assert (\n            response.status_code == 400\n        ), \"Код ответа не 400 при отсутствии обязательного поля\"\nE       AssertionError: Код ответа не 400 при отсутствии обязательного поля\nE       assert 409 == 400\nE        +  where 409 = <Response [409]>.status_code\n\nAPI-tests/test_01_create_courier_api.py:61: AssertionError"}, "description": "Проверка, что создание курьера без одного из обязательных полей приводит к ошибке 400 и сообщению 'Недостаточно данных для создания учетной записи'", "steps": [{"name": "Отправляем POST-запрос на создание курьера с сгенерированными данными в Json файле без одного из полей", "status": "failed", "statusDetails": {"message": "AssertionError: Код ответа не 400 при отсутствии обязательного поля\nassert 409 == 400\n +  where 409 = <Response [409]>.status_code\n", "trace": "  File \"/Users/vladvihrov/PycharmProjects/YAProjectSprint_7/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/vladvihrov/PycharmProjects/YAProjectSprint_7/API-tests/test_01_create_courier_api.py\", line 61, in test_create_courier_missing_field\n    assert (\n"}, "parameters": [{"name": "missing_field", "value": "'firstName'"}, {"name": "create_courier", "value": "({'login': 'G2asT6GRIo', 'password': 'upNB4KPTuw', 'firstName': 'K3Bh1Eri6p'}, {'ok': True})"}], "start": 1725407270064, "stop": 1725407270361}], "parameters": [{"name": "missing_field", "value": "'firstName'"}], "start": 1725407270064, "stop": 1725407270361, "uuid": "6ae48ed4-898b-4a13-975b-3cc5ffd019dd", "historyId": "8c4b83b19066ca0359de291c42a96e47", "testCaseId": "b39fa2175f1b45eafc005ed53213c3a8", "fullName": "API-tests.test_01_create_courier_api.TestCourierAPI#test_create_courier_missing_field", "labels": [{"name": "suite", "value": "1. Создание курьера"}, {"name": "story", "value": "Тестирование функционала создания курьера"}, {"name": "tag", "value": "@pytest.mark.usefixtures('create_courier')"}, {"name": "parentSuite", "value": "API-tests"}, {"name": "subSuite", "value": "TestCourierAPI"}, {"name": "host", "value": "MacBook-Pro-Vlad.local"}, {"name": "thread", "value": "27095-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "API-tests.test_01_create_courier_api"}]}